#!/usr/bin/env bash
# No uses -e / pipefail aquí: queremos que el daemon NUNCA se caiga
set -u

SCRIPTS_DIR="${SCRIPTS_DIR:-/workspace/scripts}"
CONF_DIR="/etc/supervisor/conf.d"
INTERVAL="${AUTO_REGISTER_INTERVAL:-7}"
SUP_USER="${SUPERVISOR_USER:-admin}"
SUP_PASS="${SUPERVISOR_PASSWORD:-admin}"

log() { printf '[auto-register] %s\n' "$*" >&2; }

notify_ui() {
  curl -fsS -u "${SUP_USER}:${SUP_PASS}" \
    "http://127.0.0.1:8000/api/notify?what=scripts_changed" >/dev/null 2>&1 || true
}

# Alta/baja idempotente de .py -> .ini
initial_sweep() {
  local changed=0
  shopt -s nullglob
  for f in "$SCRIPTS_DIR"/*.py; do
    local base ini
    base="$(basename "$f")"
    ini="$CONF_DIR/${base%.py}.ini"
    if [ ! -f "$ini" ]; then
      py-manager add "$base" || true
      changed=1
    fi
  done
  for ini in "$CONF_DIR"/*.ini; do
    [ -e "$ini" ] || continue
    if grep -q "AUTOGENERATED_BY_PY_RUNNER" "$ini"; then
      local name="${ini##*/}"; name="${name%.ini}"
      if [ ! -f "$SCRIPTS_DIR/$name.py" ]; then
        py-manager remove "$name" || true
        changed=1
      fi
    fi
  done
  [ "$changed" -eq 1 ] && notify_ui
}

# Worker inotify: si se cae, reintenta tras 5s (no aborta el proceso)
inotify_worker() {
  log "inotify worker: intentando vigilar ${SCRIPTS_DIR}"
  while :; do
    if inotifywait -qq -m -e create -e moved_to -e delete -e moved_from -e close_write \
          --format '%:e %f' "$SCRIPTS_DIR" 2>/dev/null \
        | while read -r ev file; do
            [[ "$file" != *.py ]] && continue
            local name="${file%.py}" ini="$CONF_DIR/$name.ini"
            case "$ev" in
              CREATE*|MOVED_TO*|CLOSE_WRITE*)
                [ -f "$ini" ] || py-manager add "$file" || true
                ;;
              DELETE*|MOVED_FROM*)
                [ -f "$ini" ] && py-manager remove "$name" || true
                ;;
            esac
            notify_ui
          done
    then
      : # stream terminó "bien" (raro); reintentamos igual
    else
      log "inotify terminó/erró (montaje Windows o sin soporte). Reintentando en 5s..."
      sleep 5
    fi
  done
}

# Escaneo ligero siempre activo (primer plano)
poll_worker() {
  log "poll worker: escaneo cada ${INTERVAL}s"
  while :; do
    initial_sweep
    sleep "$INTERVAL"
  done
}

# --- main
mkdir -p "$SCRIPTS_DIR" "$CONF_DIR"
initial_sweep

if command -v inotifywait >/dev/null 2>&1; then
  inotify_worker &   # en segundo plano
else
  log "inotifywait no disponible; sólo escaneo periódico"
fi

poll_worker        # en primer plano, nunca sale
